[project]
name = "part"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "colorstamps>=0.1.3",
    "datasets>=3.0.1",
    "einops>=0.8.1",
    "fvcore>=0.1.5.post20221221",
    "h5py>=3.14.0",
    "hydra-colorlog>=1.2.0",
    "hydra-core>=1.3.2",
    "hydra-optuna-sweeper>=1.3.0.dev0",
    "ipykernel>=7.0.0a1",
    "jaxtyping>=0.3.1",
    "lightning>=2.5.1",
    "matplotlib>=3.9.0",
    "mediapy>=1.2.2",
    "omegaconf>=2.3.0",
    "openmim>=0.3.9",
    "parameterized-transforms",
    "plotly>=6.1.0b0",
    "protobuf==6.30.0",
    "pydantic==2.10.6",
    "rich>=14.0.0",
    "rootutils>=1.0.7",
    "scikit-image>=0.25.2",
    "scikit-learn>=1.6.1",
    "tensorboard>=2.19.0",
    "tensorboardx>=2.6.2.2",
    "timm>=1.0.15",
    "torch==2.8.0.dev20250610",
    "torchvision==0.23.0.dev20250610",
    "wandb>=0.19.9",
]

[tool.uv]
prerelease = "allow"
package = true
index-strategy = "unsafe-best-match"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
# Defines the targets for the wheel build.
include = ["src/**"]

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/nightly/cu128"
default = false

[tool.uv.sources]
torch = { index = "pytorch-cu128" }
torchvision = { index = "pytorch-cu128" }

parameterized-transforms = { git = "https://github.com/dgcnz/parameterized-transforms" }
gradio-patch-selection = { git = "https://github.com/dgcnz/gradio_patch_selector.git" }

[dependency-groups]
dev = [
    "faiss-gpu-cu12>=1.11.0",
    "flax>=0.10.6",
    "gradio>=5.14.0",
    "gradio-patch-selection",
    "ipykernel>=7.0.0a1",
    "jax>=0.5.3",
    "jupyter>=1.1.1",
    "onnxscript>=0.3.0.dev20250409",
    "opencv-python>=4.11.0.86",
    "pandas>=2.2.3",
    "poethepoet>=0.34.0",
    "pyperclip>=1.9.0",
    "pytest>=8.3.5",
    "pytest-benchmark>=5.1.0",
    "python-louvain>=0.16",
    "ruff>=0.11.4",
    "tabulate>=0.9.0",
    "torch-lr-finder>=0.2.2",
    "typeguard>=4.4.2",
]


[tool.ruff.lint]
ignore = [
    "F722",
]



[tool.poe.tasks]
profile_pretrain = """
    sudo nsys profile \
    -w true \
    -t cuda,nvtx,osrt,cudnn,cublas \
    -s cpu \
    --capture-range cudaProfilerApi \
    --capture-range-end stop \ 
    --cudabacktrace=true \
    -f true \
    -x true \
    --gpu-metrics-devices all \
    --cuda-memory-usage true \
    --pytorch=autograd-nvtx \
    --python-sampling=true \
    --python-sampling-frequency=2000 \ 
    -e WANDB_MODE=offline,TRANSFORM_LOG_LEVEL=DEBUG \
    .venv/bin/python  \
    /home/dgcnz/development/playground/nvtx-vscode/nvtx-manager/python_scripts/nvtx_runner.py  \
    .vscode/nvtx_ranges.json  \
    src/main_pretrain.py 
"""
